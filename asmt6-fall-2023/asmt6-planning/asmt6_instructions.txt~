CMPU-365, Fall 2023
Asmt. 6
Due:  Tuesday, Nov. 21 @ Noon

Groups for this assignment:
			
   a	tomiwa	corinne	  ryan
   b	joram	noon	  case
   c	rowan	owen	  jared  
   d	sanjae	rommel	  caroline
   e	chris	quynh mai becca 
   f	michael	abby	  kp
   g	nahom	caleb	  liam

For this assignment, you will create a planning domain (i.e., a set of
operators/actions) and associated planning problems (i.e.,
specification of initial state and goal state) of your own choosing.
You will generate solutions (i.e., complete plans) for at least one
problem using both UCPOP and SGP.  Your planning domain should be
complex enough that it challenges these systems.  You are encouraged
to be as creative as possible.  Also, it is okay to incrementally
build up your planning problem so that initial instances are quite
easy and then get progressively harder.  (For example, one could
imagine a progressively more complicated version of the blocks world.
But don't use blocks in your domain!) In addition, since you are
designing everything, you should be able to "fix things" so that there
is a guaranteed solution at each stage of your development (e.g.,
provide enough operators/actions that you can manually ensure that
there is a solution).

==> Of particular interest would be if you can detect a difference in
    performance of the two algorithms.  If so, can you explain (in a
    separate "readme.txt" file) why you think one algorithm is
    performing better than the other?  What features of your domain
    might explain that?

==> You should turn in printouts of your Lisp files showing your
    domain encodings.  See the many sample files provided in the
    asmt6-planning directory.  You should also turn in a printout of
    your interactions showing the solutions/plans generated by both
    UCPOP and SGP, including timing information.  Also, include a
    printout of your "readme.txt" file.
