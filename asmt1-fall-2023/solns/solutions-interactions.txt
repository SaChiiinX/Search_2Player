CL-USER(65): (load "testing")
; Loading /home/cs365/public_html/asmt1-fall-2023/solns/testing.lisp


====================================
  CMPU-365, Fall 2023
  Asmt. 1
  SOLUTIONS!!
====================================

(MAKER *MY-FILES*) ===> 
(T T T T T T)


-------------------------
 PROBLEM Vacuum World Testing
-------------------------

(DO-VW-DEPTH) ===> 
Hey!  We found a goal node!!

Generated 118 nodes in 0.0 seconds (0.0 sec/node)
SUCCESS!!!

*** BEGIN SOLUTION PATH ***

(NODE:  (action = NIL)
         STATE: Rob-Loc: (0 0), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (1 0), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (2 0), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (3 0), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function SOUTH>)
         STATE: Rob-Loc: (3 1), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (2 1), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (1 1), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (0 1), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function SOUTH>)
         STATE: Rob-Loc: (0 2), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (1 2), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (2 2), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (3 2), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function SOUTH>)
         STATE: Rob-Loc: (3 3), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (2 3), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (1 3), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (0 3), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function VACUUM>)
         STATE: Rob-Loc: (0 3), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (1 3), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (2 3), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (3 3), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function NORTH>)
         STATE: Rob-Loc: (3 2), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (2 2), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (1 2), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (0 2), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function NORTH>)
         STATE: Rob-Loc: (0 1), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (1 1), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (2 1), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (3 1), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function NORTH>)
         STATE: Rob-Loc: (3 0), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (2 0), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (1 0), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (0 0), Dirt-Locs: ((0 0) (1 2) (3 1))

 NODE:  (action = #<Function VACUUM>)
         STATE: Rob-Loc: (0 0), Dirt-Locs: ((1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (1 0), Dirt-Locs: ((1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (2 0), Dirt-Locs: ((1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (3 0), Dirt-Locs: ((1 2) (3 1))

 NODE:  (action = #<Function SOUTH>)
         STATE: Rob-Loc: (3 1), Dirt-Locs: ((1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (2 1), Dirt-Locs: ((1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (1 1), Dirt-Locs: ((1 2) (3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (0 1), Dirt-Locs: ((1 2) (3 1))

 NODE:  (action = #<Function SOUTH>)
         STATE: Rob-Loc: (0 2), Dirt-Locs: ((1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (1 2), Dirt-Locs: ((1 2) (3 1))

 NODE:  (action = #<Function VACUUM>)
         STATE: Rob-Loc: (1 2), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (0 2), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function SOUTH>)
         STATE: Rob-Loc: (0 3), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (1 3), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (2 3), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (3 3), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function NORTH>)
         STATE: Rob-Loc: (3 2), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (2 2), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function NORTH>)
         STATE: Rob-Loc: (2 1), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (1 1), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function WEST>)
         STATE: Rob-Loc: (0 1), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function NORTH>)
         STATE: Rob-Loc: (0 0), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (1 0), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (2 0), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (3 0), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function SOUTH>)
         STATE: Rob-Loc: (3 1), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function VACUUM>)
         STATE: Rob-Loc: (3 1), Dirt-Locs: NIL

)
==============================================
*** END SOLUTION PATH (length: 58) ***
==============================================
Overall Node Count: 118



(DO-VW-BREADTH) ===> 
Hey!  We found a goal node!!

Generated 49004 nodes in 0.847 seconds (1.7284303e-5 sec/node)
SUCCESS!!!

*** BEGIN SOLUTION PATH ***

(NODE:  (action = NIL)
         STATE: Rob-Loc: (0 0), Dirt-Locs: ((0 0) (0 3) (1 2) (3 1))

 NODE:  (action = #<Function VACUUM>)
         STATE: Rob-Loc: (0 0), Dirt-Locs: ((0 3) (1 2) (3 1))

 NODE:  (action = #<Function SOUTH>)
         STATE: Rob-Loc: (0 1), Dirt-Locs: ((0 3) (1 2) (3 1))

 NODE:  (action = #<Function SOUTH>)
         STATE: Rob-Loc: (0 2), Dirt-Locs: ((0 3) (1 2) (3 1))

 NODE:  (action = #<Function SOUTH>)
         STATE: Rob-Loc: (0 3), Dirt-Locs: ((0 3) (1 2) (3 1))

 NODE:  (action = #<Function VACUUM>)
         STATE: Rob-Loc: (0 3), Dirt-Locs: ((1 2) (3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (1 3), Dirt-Locs: ((1 2) (3 1))

 NODE:  (action = #<Function NORTH>)
         STATE: Rob-Loc: (1 2), Dirt-Locs: ((1 2) (3 1))

 NODE:  (action = #<Function VACUUM>)
         STATE: Rob-Loc: (1 2), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (2 2), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function EAST>)
         STATE: Rob-Loc: (3 2), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function NORTH>)
         STATE: Rob-Loc: (3 1), Dirt-Locs: ((3 1))

 NODE:  (action = #<Function VACUUM>)
         STATE: Rob-Loc: (3 1), Dirt-Locs: NIL

)
==============================================
*** END SOLUTION PATH (length: 12) ***
==============================================
Overall Node Count: 49004


-------------------------
 PROBLEM Eights Tile Puzzle Testing
-------------------------

(SETF PUZZ (MAKE-RANDOM-EIGHTS 5)) ===> 
  1 2 3 
  8 6 _ 
  7 5 4 



(DO-EIGHTS-BREADTH PUZZ SHOW? T) ===> 
Hey!  We found a goal node!!

Generated 25 nodes in 0.0 seconds (0.0 sec/node)
SUCCESS!!!

*** BEGIN SOLUTION PATH ***

(NODE:  (action = NIL)
         STATE:   1 2 3 
  8 6 _ 
  7 5 4 

 NODE:  (action = #<Function BLANK-SOUTH>)
         STATE:   1 2 3 
  8 6 4 
  7 5 _ 

 NODE:  (action = #<Function BLANK-WEST>)
         STATE:   1 2 3 
  8 6 4 
  7 _ 5 

 NODE:  (action = #<Function BLANK-NORTH>)
         STATE:   1 2 3 
  8 _ 4 
  7 6 5 

)
==============================================
*** END SOLUTION PATH (length: 3) ***
==============================================
Overall Node Count: 25



(DO-EIGHTS-DEPTH PUZZ SHOW? NIL) ===> 
Hey!  We found a goal node!!

Generated 55 nodes in 0.001 seconds (1.818182e-5 sec/node)
RESULTS:  explored 55 nodes in 1 msecs.
Found a solution with 30 steps!
NIL

(SETF BIG-PUZZ (MAKE-RANDOM-EIGHTS 25)) ===> 
  1 2 _ 
  7 4 3 
  6 8 5 



(DO-EIGHTS-BREADTH BIG-PUZZ SHOW? NIL) ===> 
Hey!  We found a goal node!!

Generated 132 nodes in 0.0 seconds (0.0 sec/node)
RESULTS:  explored 132 nodes in 0 msecs.
Found a solution with 7 steps!
NIL


(DO-EIGHTS-DEPTH PUZZ SHOW? NIL) ===> 
Hey!  We found a goal node!!

Generated 55 nodes in 0.0 seconds (0.0 sec/node)
RESULTS:  explored 55 nodes in 0 msecs.
Found a solution with 30 steps!
NIL

T
